openapi: 3.0.3
info:
  title: Ottu API
  version: 1.0.0
  description: Ottu API
paths:
  /api/v1/unified-ui/payment/{type}/{id}/:
    get:
      operationId: get_payment_details
      description: Payment transaction details to be used for payment detail page
        on the frontend dashboard
      summary: Retrieve the payment transaction details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: type
        schema:
          type: string
        required: true
      tags:
      - Unified UI
      security:
      - SSO JWT Auth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourZeroOne'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourZeroFour'
          description: ''
  /checkout/api/sdk/v1/pymt-txn/submit/{session_id}/:
    get:
      operationId: initiate_checkout_sdk
      description: The payment details to be used for initiating a checkout process
        using the Checkout SDK.
      summary: Retrieve init data
      parameters:
      - in: path
        name: session_id
        schema:
          type: string
          pattern: ^[-\w]+$
        required: true
      tags:
      - Checkout SDK
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSDKResponse'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourZeroOne'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourZeroFour'
          description: ''
  /checkout/api/sdk/v1/submit-token/:
    post:
      operationId: submit_token_payment_method
      description: Use the Pay with Token Endpoint to process a payment with a saved
        card token.
      summary: Submit token payment method
      tags:
      - Checkout SDK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitToken'
        required: true
      security:
      - SSO JWT Auth: []
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - SSO BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDKSubmitTokenResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldErrors'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourZeroFour'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourZeroOne'
          description: ''
  /checkout/api/sdk/v1/submit/{session_id}/:
    post:
      operationId: submit_redirect_payment_method
      description: Submit the payment method customer has selected on the SDK and
        in return get the PG url where the user can be redirected to perform the payment.
      summary: Submit redirect payment method
      parameters:
      - in: path
        name: session_id
        schema:
          type: string
          pattern: ^[-\w]+$
        required: true
      tags:
      - Checkout SDK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutSubmit'
        required: true
      security:
      - SSO JWT Auth: []
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - SSO BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDKSubmitRedirectResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldErrors'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourZeroFour'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourZeroOne'
          description: ''
  /checkout/v1/pymt-txn/:
    post:
      operationId: create_payment_transaction_checkout
      description: Create a new Payment Transaction
      summary: Create a new Payment Transaction
      tags:
      - Checkout API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutPOSTRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckoutPOSTRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CheckoutPOSTRequest'
        required: true
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      - SSO JWT Auth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutPOSTResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrors'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDenied'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaType'
          description: ''
        '423':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePaused'
          description: ''
  https://<ottu-url>/b/pbl/v2/card/:
    get:
      operationId: get_user_cards
      description: This endpoint retrieves a list of cards saved by the customer.
        The response includes details such as the card's masked number, card type,
        and expiration date. By using this endpoint, you can provide the customer
        with an overview of their saved cards for future payments.
      summary: Retrieve a list of saved cards for the customer.
      parameters:
      - in: query
        name: customer_id
        schema:
          type: string
          minLength: 1
        description: Retrieve cards associated with a specific customer using their
          unique customer_id.
        required: true
      - in: query
        name: pg_codes
        schema:
          type: array
          minLength: 1
        description: Specify the `pg_code` if you want to retrieve cards for a particular
          payment gateway, such as `credit-card`. The pg_code is initialized in the `Checkout API` when the `session_id` is created, with each card being associated
          with a single payment gateway/pg_code.
        required: false
      - in: query
        name: type
        schema:
          enum:
          - sandbox
          - production
          type: string
          minLength: 1
        description: Choose between `sandbox` and `production`. Select sandbox to retrieve cards created for test Payment Gateway MIDs, or production to fetch real cards used in live transactions.

          * `sandbox` - Sandbox
          * `production` - Production
        required: true
      tags:
      - Operation API
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardErrors'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDenied'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaType'
          description: ''
  https://<ottu-url>/b/pbl/v2/card/{{token}}:
    delete:
      operationId: delete_user_cards
      description: This endpoint allows you to delete a customer's saved card from
        the system. Provide the unique card identifier to remove the card from the
        customer's saved cards list. This action can help maintain up-to-date card
        information and ensure that customers do not accidentally use expired or unwanted
        cards for payments.
      summary: Delete a saved card for the customer.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        description: The unique token associated with the card to be deleted.
        required: true
      - in: query
        name: customer_id
        schema:
          type: string
          minLength: 1
        description: Retrieve cards associated with a specific customer using their
          unique customer_id.
        required: true
      - in: query
        name: type
        schema:
          enum:
          - sandbox
          - production
          type: string
          minLength: 1
        description: Choose between `sandbox` and `production`. Select sandbox to retrieve cards created for test Payment Gateway MIDs, or production to fetch real cards used in live transactions.

          * `sandbox` - Sandbox
          * `production` - Production
        required: true
      tags:
      - Operation API
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardErrors'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailed'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDenied'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaType'
          description: ''
  /service/api/v1/apay/pay/:
    post:
      operationId: post_pay_apple_pay
      description: Submit an Apple Pay payment once received the `token` from ApplePay.
      summary: Submit an Apple Pay payment
      tags:
      - Checkout SDK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayApplePay'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PayApplePay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PayApplePay'
        required: true
      security:
      - SSO JWT Auth: []
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - SSO BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayViewSuccessResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayViewFailResponse'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourZeroOne'
          description: ''
  /service/api/v1/apay/validate-session/:
    post:
      operationId: post_validate_apple_pay_session
      description: Validate session for device eligibility and payment request accuracy.
      summary: Validate Apple Pay session
      tags:
      - Checkout SDK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayApplePay'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PayApplePay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PayApplePay'
        required: true
      security:
      - SSO JWT Auth: []
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - SSO BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessSessionValidation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSessionValidation'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourZeroOne'
          description: ''
  /service/api/v1/gpay/pay/:
    post:
      operationId: post_pay_google_pay
      description: Submit a Google Pay payment once received the `paymentData` from
        GooglePay.
      summary: Submit a Google Pay payment
      tags:
      - Checkout SDK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayGooglePay'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PayGooglePay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PayGooglePay'
        required: true
      security:
      - SSO JWT Auth: []
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - SSO BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayViewSuccessResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayViewFailResponse'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourZeroOne'
          description: ''
components:
  schemas:
    ActionEnum:
      enum:
      - 0
      - 1
      - 2
      type: integer
      description: |-
        * `0` - create
        * `1` - update
        * `2` - delete
    Address:
      type: object
      description: Nested serializer to save Address data into PaymentTransaction
      properties:
        line1:
          type: string
          maxLength: 128
        line2:
          type: string
          maxLength: 128
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 40
        country:
          $ref: '#/components/schemas/CountryEnum'
        postal_code:
          type: string
          maxLength: 12
      required:
      - city
      - country
      - line1
      - postal_code
    ApplePayConfigOutput:
      type: object
      description: Serializer for Apple Pay config, to be used in SDK clients like
        web and mobile.
      properties:
        domain:
          type: string
          description: The domain of the merchant accepting the payment.
          maxLength: 255
        merchant_id:
          type: string
          description: The ID of the merchant accepting the payment.
          maxLength: 100
        code:
          type: string
          description: The payment service code.
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        shop_name:
          type: string
          description: The name of the shop or store accepting the payment.
          maxLength: 255
        amount:
          type: string
          description: The total amount of the payment, including any fees.
          maxLength: 20
        fee:
          type: string
          description: The fee for the payment.
          maxLength: 20
        currency_code:
          type: string
          description: The ISO 4217 currency code for the payment.
          maxLength: 10
        country_code:
          type: string
          description: The ISO 3166-1 alpha-2 country code for the payment currency.
          maxLength: 2
        validation_url:
          type: string
          format: uri
          description: The URL to use for validating the payment session.
          maxLength: 2000
        payment_url:
          type: string
          format: uri
          description: The URL to use for submitting the payment.
          maxLength: 2000
        session_id:
          type: string
          description: The ID of the payment session, if included.
          maxLength: 100
      required:
      - amount
      - code
      - country_code
      - currency_code
      - domain
      - fee
      - merchant_id
      - payment_url
      - shop_name
      - validation_url
    ApplePayPayload:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/ParentToken'
      required:
      - token
    Attempt:
      type: object
      description: This Attempt models its used solely for PaymentTransaction detail
        page
      properties:
        id:
          type: integer
          readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/core.payment.models.PaymentAttempt.StateChoices'
          description: |-
            Represents the current status of a payment attempt. This means that it shows whether a payment is pending, has been successfully processed, has failed, has been canceled, or has encountered an error. Additionally, it also supports the Cash on Delivery payment method.

            * `pending` - Pending
            * `success` - Success
            * `failed` - Failed
            * `canceled` - Canceled
            * `error` - Error
            * `cod` - Cash on Delivery
        message:
          type: string
          description: Error message in case of failed payment
        reference_number:
          type: string
          nullable: true
          description: This is a unique value associated with each payment attempt
            made by a customer. It serves as the unique identifier for the payment
            when sent to the Payment Gateway (PG). It can be used to identify a specific
            payment attempt within one session, allowing for multiple reference numbers
            per session_id.
          maxLength: 64
        gateway_response:
          type: object
          additionalProperties: {}
        amount:
          type: string
          maxLength: 120
        fee:
          type: string
          maxLength: 120
        total:
          type: string
          maxLength: 120
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        state_changed_at:
          type: string
          format: date-time
        currency_code:
          allOf:
          - $ref: '#/components/schemas/CurrencyCode4f5Enum'
          description: ''
        disclosed_to_merchant:
          type: boolean
          title: Disclosed to merchant?
        disclosed_data:
          type: object
          additionalProperties: {}
          description: Webhooked data to merchant webhook URL.
        disclosure_url_error:
          type: object
          additionalProperties: {}
          title: Webhook URL error
          description: Logs the error reason of merchant webhook url.
        request_data:
          type: object
          additionalProperties: {}
          description: Technical data of the request that user sent.
        data:
          type: object
          additionalProperties: {}
          description: Used to store useful information for internal purposes
      required:
      - created
      - currency_code
      - id
      - modified
    AuthenticationFailed:
      type: object
      properties:
        detail:
          type: string
          default: Authentication credentials were not provided.
    BlankEnum:
      enum:
      - ''
    Bulk:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 512
      required:
      - id
    Card:
      type: object
      description: Serializer for Card model.
      properties:
        customer_id:
          type: string
          description: The unique identifier for the customer who owns the card
          maxLength: 36
        brand:
          type: string
          description: The card brand (e.g., Visa, Mastercard) associated with the
            card. Display this information for customer reference.
          maxLength: 32
        name_on_card:
          type: string
          description: The cardholder's name as it appears on the card. Display this
            information for customer verification.
          maxLength: 64
        number:
          type: string
          description: The masked card number to be displayed, ensuring customer privacy
            and security while providing essential information.
          maxLength: 19
        expiry_month:
          type: string
          description: The card's expiration month. Provide this information for transaction
            processing and validation.
          maxLength: 2
        expiry_year:
          type: string
          description: The card's expiration year. Provide this information for transaction
            processing and validation.
          maxLength: 2
        token:
          type: string
          description: The unique token associated with the card, required for tokenized
            card payments. Use this value to securely process transactions.
          maxLength: 19
        preferred:
          type: boolean
          description: ' Indicates if the card is the customer''s preferred payment
            option. Order cards with this attribute set to true at the top of the
            list for easy access.'
        is_expired:
          type: boolean
          description: A boolean field indicating whether the card has expired. Use
            this information to determine if the card is valid for transactions and
            to notify the customer if necessary.
        pg_code:
          type: string
          readOnly: true
          description: Payment gateway code which was used to generate this token.
        cvv_required:
          type: boolean
          readOnly: true
          description: Whether CVV is required for this card.
        delete_url:
          type: string
          readOnly: true
          description: Delete URL for this card.
        submit_url:
          type: string
          readOnly: true
          description: Submit URL for this card.
      required:
      - brand
      - customer_id
      - cvv_required
      - delete_url
      - expiry_month
      - expiry_year
      - is_expired
      - name_on_card
      - number
      - pg_code
      - preferred
      - submit_url
      - token
    CardErrors:
      oneOf:
      - $ref: '#/components/schemas/FieldErrors'
      - $ref: '#/components/schemas/GenericErrorMessage'
    ChannelEnum:
      enum:
      - web_sdk
      - mobile_sdk
      type: string
      description: |-
        * `web_sdk` - web_sdk
        * `mobile_sdk` - mobile_sdk
    CheckoutPOSTRequest:
      type: object
      description: |-
        Serializer to work with PaymentTransaction instances.

        Also uses request data from other serializers to save into PaymentTransaction db table:
      properties:
        amount:
          type: string
          format: decimal
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
        currency_code:
          type: string
          description: The currency in which the transaction is denominated. However,
            it does not guarantee that the payment must be made in this currency,
            as there can be currency conversions or exchanges resulting in a different
            currency being charged.
        pg_codes:
          type: array
          items:
            type: string
          title: Payment Gateway Codes
          description: The list of payment gateway codes from which a customer can
            select to perform the payment or authorization.
        type:
          allOf:
          - $ref: '#/components/schemas/Type644Enum'
          description: |-
            The type of the payment transaction. This field represents the purpose of the payment and can be one of several pre-defined choices.

            * `e_commerce` - e_commerce
            * `payment_request` - payment_request
        attachment:
          type: string
          format: uri
          description: An optional attachment that will be included in email notifications
            sent to the customer regarding their payment, and also be available for
            download on the checkout page. This field may be used to provide the customer
            with additional information or documentation related to their purchase.
        attachment_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL that links to the attachment associated with this
            payment. This URL may be included in email/sms notifications sent to the
            customer regarding their payment or displayed on the checkout page to
            allow the customer to easily access the attachment.
        billing_address:
          $ref: '#/components/schemas/Address'
        checkout_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL link that, when opened, redirects to the checkout
            page for this payment. This URL may be shared with the customer to allow
            them to easily access and complete the payment. This field is only available
            if the `shortify_checkout_url` field is set to True.
        checkout_url:
          type: string
          format: uri
          readOnly: true
          description: URL that directs the customer to the Ottu Checkout Page where
            they can see the payment details and available payment methods for the
            transaction. If you need to share the payment link over SMS or WhatsApp,
            use `checkout_short_url` instead.
        customer_email:
          type: string
          format: email
          description: The email address of the customer that is used to send payment
            notifications and receipts, and can be used for fraud prevention. This
            field is mandatory and is always sent to the payment gateway. It may also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 128
        customer_first_name:
          type: string
          description: The first name of the recipient of the payment. This field
            is used for various communications such as the invoice, receipt, email,
            SMS, or displayed on the payment page. It may also be sent to the payment
            gateway if necessary.
          maxLength: 64
        customer_id:
          type: string
          description: The customer ID is a unique identifier for the customer within
            the merchant's system. It is also used as a merchant identifier for the
            customer and plays a critical role in tokenization. All the customer's
            cards will be associated with this ID.
          maxLength: 64
        customer_last_name:
          type: string
          description: The last name of the recipient of the payment. This field is
            used for various communications such as the invoice, receipt, email, SMS,
            or displayed on the payment page. It may also be sent to the payment gateway
            if necessary.
          maxLength: 64
        customer_phone:
          type: string
          description: Customer phone number associated with the payment. This might
            be sent to the payment gateway and depending on the gateway, it may trigger
            a click to pay process on the payment page. The phone number will also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 16
        due_datetime:
          type: string
          format: date-time
          title: Due date and time
          description: The date and time by which the payment is due. This field may
            be used to help remind the customer to complete the payment before the
            due date.
        email_recipients:
          type: array
          items:
            type: string
            format: email
          description: A comma-separated list of email addresses for internal recipients
            who will receive customer emails. These recipients will be included in
            email notifications sent to the customer regarding their payment.
        expiration_time:
          type: string
          description: If defined, any payment transactions created more than the
            defined period of time ago will be invalidated or expired if the customer
            tries to pay them. This field may be used to help ensure that payment
            transactions are processed in a timely manner.
        extra:
          $ref: '#/components/schemas/ExtraInner'
        generate_qr_code:
          type: boolean
          writeOnly: true
          default: false
          description: If set to true, the `qr_code_url` field will be present in
            the response. Upon scanning it, the customer will be redirected to the
            checkout_url, which is the Ottu Checkout page.
        initiator_id:
          type: integer
          readOnly: true
          title: initiator
          description: The user who initiated the creation of this payment transaction,
            if available. This field is optional and may be used to track who created
            the payment transaction. Note that if the payment transaction was created
            via the Checkout API using an API-Key, no initiator will be associated
            with the payment.
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageEnum'
          default: en
          description: |-
            This field specifies the language to be used for communication with the customer, including the payment page, receipt, invoice, email, SMS, and any other communications related to the payment transaction.

            * `en` - English
            * `ar` - Arabic
        mode:
          allOf:
          - $ref: '#/components/schemas/ModeEnum'
          default: payment
        notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          title: Notification settings
          description: A JSON field that contains the notification settings for this
            payment transaction, including SMS and email notifications, as well as
            the events for which they will be sent (e.g., 'created', 'paid', 'refund',
            'canceled', etc.). This field may be used to configure and customize the
            notifications sent to customers and internal recipients throughout the
            payment process.
        operation:
          type: string
          readOnly: true
          description: Specifies the type of operation to be performed by the payment
            gateway. If set to 'purchase', the payment source will be directly charged.
            If set to 'authorize', the payment source will only be authorized and
            the actual charge will be made at a later time.
        order_no:
          type: string
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
          maxLength: 128
        payment_methods:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodsForRedirect'
          readOnly: true
          description: An array containing all the payment methods derived from the
            `pg_codes` input. Each object in the array contains information about
            a single payment gateway, including its icon and the `redirect_url` that
            will redirect the customer to the payment gateway's payment page.
        product_type:
          type: string
          description: The type of product or service being purchased. This field
            may be used for tracking and reporting purposes.
          maxLength: 128
        qr_code_url:
          type: string
          format: uri
          readOnly: true
          description: A QR code that, when scanned, redirects to the checkout page
            for this payment. This QR code may be displayed on invoices, receipts,
            or other documents to allow customers to easily access the checkout page
            and make a payment. This parameter is only present when `generate_qr_code`
            is set to true.
        redirect_url:
          type: string
          format: uri
          description: The URL where the customer will be redirected after the payment
            stage only if the webhook URL returns a success status.
          maxLength: 200
        session_id:
          type: string
          readOnly: true
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        shipping_address:
          $ref: '#/components/schemas/ShippingAddress'
        shortify_attachment_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the URL of the uploaded attachment will be
            shortened using a URL shortener service. This should be used when sharing
            the attachment URL via SMS or WhatsApp.
        shortify_checkout_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the checkout URL will be shortened using a
            URL shortener service. This should be used when sharing the payment URL
            via SMS or WhatsApp.
        state:
          allOf:
          - $ref: '#/components/schemas/StateD0dEnum'
          readOnly: true
          description: |-
            The current state of the payment transaction, it helps to understand the progress of the payment.

            * `created` - Created
            * `pending` - Pending
            * `attempted` - Attempted
            * `authorized` - Authorized
            * `paid` - Paid
            * `failed` - Failed
            * `canceled` - Canceled
            * `expired` - Expired
            * `invalided` - Invalided
            * `refunded` - Refunded
            * `cod` - Cash on Delivery
        unit_code:
          type: string
          writeOnly: true
        vendor_name:
          type: string
          description: The name of the vendor or merchant associated with this payment.
            This field may be used for accounting and reporting purposes.
          maxLength: 64
        webhook_url:
          type: string
          format: uri
          description: 'URL where the payment result will be sent via a POST request
            after the customer has completed the payment session. The payment result
            will be included in the request body. '
      required:
      - amount
      - attachment_short_url
      - checkout_short_url
      - checkout_url
      - currency_code
      - initiator_id
      - operation
      - payment_methods
      - pg_codes
      - qr_code_url
      - session_id
      - state
      - type
    CheckoutPOSTResponse:
      type: object
      description: |-
        Serializer to work with PaymentTransaction instances.

        Also uses request data from other serializers to save into PaymentTransaction db table:
      properties:
        amount:
          type: string
          format: decimal
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
        currency_code:
          type: string
          description: The currency in which the transaction is denominated. However,
            it does not guarantee that the payment must be made in this currency,
            as there can be currency conversions or exchanges resulting in a different
            currency being charged.
        pg_codes:
          type: array
          items:
            type: string
          title: Payment Gateway Codes
          description: The list of payment gateway codes from which a customer can
            select to perform the payment or authorization.
        type:
          allOf:
          - $ref: '#/components/schemas/Type644Enum'
          description: |-
            The type of the payment transaction. This field represents the purpose of the payment and can be one of several pre-defined choices.

            * `e_commerce` - e_commerce
            * `payment_request` - payment_request
        attachment:
          type: string
          format: uri
          description: An optional attachment that will be included in email notifications
            sent to the customer regarding their payment, and also be available for
            download on the checkout page. This field may be used to provide the customer
            with additional information or documentation related to their purchase.
        attachment_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL that links to the attachment associated with this
            payment. This URL may be included in email/sms notifications sent to the
            customer regarding their payment or displayed on the checkout page to
            allow the customer to easily access the attachment.
        billing_address:
          $ref: '#/components/schemas/Address'
        checkout_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL link that, when opened, redirects to the checkout
            page for this payment. This URL may be shared with the customer to allow
            them to easily access and complete the payment. This field is only available
            if the `shortify_checkout_url` field is set to True.
        checkout_url:
          type: string
          format: uri
          readOnly: true
          description: URL that directs the customer to the Ottu Checkout Page where
            they can see the payment details and available payment methods for the
            transaction. If you need to share the payment link over SMS or WhatsApp,
            use `checkout_short_url` instead.
        customer_email:
          type: string
          format: email
          description: The email address of the customer that is used to send payment
            notifications and receipts, and can be used for fraud prevention. This
            field is mandatory and is always sent to the payment gateway. It may also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 128
        customer_first_name:
          type: string
          description: The first name of the recipient of the payment. This field
            is used for various communications such as the invoice, receipt, email,
            SMS, or displayed on the payment page. It may also be sent to the payment
            gateway if necessary.
          maxLength: 64
        customer_id:
          type: string
          description: The customer ID is a unique identifier for the customer within
            the merchant's system. It is also used as a merchant identifier for the
            customer and plays a critical role in tokenization. All the customer's
            cards will be associated with this ID.
          maxLength: 64
        customer_last_name:
          type: string
          description: The last name of the recipient of the payment. This field is
            used for various communications such as the invoice, receipt, email, SMS,
            or displayed on the payment page. It may also be sent to the payment gateway
            if necessary.
          maxLength: 64
        customer_phone:
          type: string
          description: Customer phone number associated with the payment. This might
            be sent to the payment gateway and depending on the gateway, it may trigger
            a click to pay process on the payment page. The phone number will also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 16
        due_datetime:
          type: string
          format: date-time
          title: Due date and time
          description: The date and time by which the payment is due. This field may
            be used to help remind the customer to complete the payment before the
            due date.
        email_recipients:
          type: array
          items:
            type: string
            format: email
          description: A comma-separated list of email addresses for internal recipients
            who will receive customer emails. These recipients will be included in
            email notifications sent to the customer regarding their payment.
        expiration_time:
          type: string
          description: If defined, any payment transactions created more than the
            defined period of time ago will be invalidated or expired if the customer
            tries to pay them. This field may be used to help ensure that payment
            transactions are processed in a timely manner.
        extra:
          $ref: '#/components/schemas/ExtraInner'
        generate_qr_code:
          type: boolean
          writeOnly: true
          default: false
          description: If set to true, the `qr_code_url` field will be present in
            the response. Upon scanning it, the customer will be redirected to the
            checkout_url, which is the Ottu Checkout page.
        initiator_id:
          type: integer
          readOnly: true
          title: initiator
          description: The user who initiated the creation of this payment transaction,
            if available. This field is optional and may be used to track who created
            the payment transaction. Note that if the payment transaction was created
            via the Checkout API using an API-Key, no initiator will be associated
            with the payment.
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageEnum'
          default: en
          description: |-
            This field specifies the language to be used for communication with the customer, including the payment page, receipt, invoice, email, SMS, and any other communications related to the payment transaction.

            * `en` - English
            * `ar` - Arabic
        mode:
          allOf:
          - $ref: '#/components/schemas/ModeEnum'
          default: payment
        notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          title: Notification settings
          description: A JSON field that contains the notification settings for this
            payment transaction, including SMS and email notifications, as well as
            the events for which they will be sent (e.g., 'created', 'paid', 'refund',
            'canceled', etc.). This field may be used to configure and customize the
            notifications sent to customers and internal recipients throughout the
            payment process.
        operation:
          type: string
          readOnly: true
          description: Specifies the type of operation to be performed by the payment
            gateway. If set to 'purchase', the payment source will be directly charged.
            If set to 'authorize', the payment source will only be authorized and
            the actual charge will be made at a later time.
        order_no:
          type: string
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
          maxLength: 128
        payment_methods:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodsForRedirect'
          readOnly: true
          description: An array containing all the payment methods derived from the
            `pg_codes` input. Each object in the array contains information about
            a single payment gateway, including its icon and the `redirect_url` that
            will redirect the customer to the payment gateway's payment page.
        product_type:
          type: string
          description: The type of product or service being purchased. This field
            may be used for tracking and reporting purposes.
          maxLength: 128
        qr_code_url:
          type: string
          format: uri
          readOnly: true
          description: A QR code that, when scanned, redirects to the checkout page
            for this payment. This QR code may be displayed on invoices, receipts,
            or other documents to allow customers to easily access the checkout page
            and make a payment. This parameter is only present when `generate_qr_code`
            is set to true.
        redirect_url:
          type: string
          format: uri
          description: The URL where the customer will be redirected after the payment
            stage only if the webhook URL returns a success status.
          maxLength: 200
        session_id:
          type: string
          readOnly: true
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        shipping_address:
          $ref: '#/components/schemas/ShippingAddress'
        shortify_attachment_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the URL of the uploaded attachment will be
            shortened using a URL shortener service. This should be used when sharing
            the attachment URL via SMS or WhatsApp.
        shortify_checkout_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the checkout URL will be shortened using a
            URL shortener service. This should be used when sharing the payment URL
            via SMS or WhatsApp.
        state:
          allOf:
          - $ref: '#/components/schemas/StateD0dEnum'
          readOnly: true
          description: |-
            The current state of the payment transaction, it helps to understand the progress of the payment.

            * `created` - Created
            * `pending` - Pending
            * `attempted` - Attempted
            * `authorized` - Authorized
            * `paid` - Paid
            * `failed` - Failed
            * `canceled` - Canceled
            * `expired` - Expired
            * `invalided` - Invalided
            * `refunded` - Refunded
            * `cod` - Cash on Delivery
        unit_code:
          type: string
          writeOnly: true
        vendor_name:
          type: string
          description: The name of the vendor or merchant associated with this payment.
            This field may be used for accounting and reporting purposes.
          maxLength: 64
        webhook_url:
          type: string
          format: uri
          description: 'URL where the payment result will be sent via a POST request
            after the customer has completed the payment session. The payment result
            will be included in the request body. '
      required:
      - amount
      - attachment_short_url
      - checkout_short_url
      - checkout_url
      - currency_code
      - initiator_id
      - operation
      - payment_methods
      - pg_codes
      - qr_code_url
      - session_id
      - state
      - type
    CheckoutSDKResponse:
      type: object
      description: |-
        Serialize data for SDK init.
        The SDK will use this data to initialize the payment process and
        to display the payment methods.
      properties:
        amount:
          type: string
          format: decimal
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
        apple_pay_available:
          type: boolean
          readOnly: true
          description: Indicates Apple Pay availability. If true, `apple_pay_config`
            is populated with the necessary configuration.
        apple_pay_config:
          allOf:
          - $ref: '#/components/schemas/ApplePayConfigOutput'
          readOnly: true
          description: Configuration for displaying the Apple Pay button.
        google_pay_available:
          type: boolean
          readOnly: true
          description: Indicates Google Pay availability. If true, `google_pay_config`
            is populated with the necessary configuration.
        google_pay_config:
          allOf:
          - $ref: '#/components/schemas/GooglePayConfigOutput'
          readOnly: true
          description: Configuration for displaying the Google Pay button.
        cards:
          type: array
          items:
            $ref: '#/components/schemas/Card'
          description: List of saved tokenized cards for customer payments, which
            can be used for transactions. Render alongside `payment_methods` for customers
            to choose from.
        customer_id:
          type: string
          description: The customer ID is a unique identifier for the customer within
            the merchant's system. It is also used as a merchant identifier for the
            customer and plays a critical role in tokenization. All the customer's
            cards will be associated with this ID.
          maxLength: 64
        currency_code:
          type: string
          description: The currency in which the transaction is denominated. However,
            it does not guarantee that the payment must be made in this currency,
            as there can be currency conversions or exchanges resulting in a different
            currency being charged.
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageEnum'
          default: en
          description: |-
            This field specifies the language to be used for communication with the customer, including the payment page, receipt, invoice, email, SMS, and any other communications related to the payment transaction.

            * `en` - English
            * `ar` - Arabic
        operation:
          type: string
          readOnly: true
          description: Specifies the type of operation to be performed by the payment
            gateway. If set to 'purchase', the payment source will be directly charged.
            If set to 'authorize', the payment source will only be authorized and
            the actual charge will be made at a later time.
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/SDKPaymentMethods'
          description: List of available payment methods, excluding device-based options
            like Apple Pay, Google Pay, and tokenized cards, that the SDK should render
            for customers to choose from.
        response:
          allOf:
          - $ref: '#/components/schemas/PaymentResponse'
          description: Payment Gateway Response, present post-payment. SDK refreshes
            payment details and triggers `successCallback` or `cancelCallback` based
            on `response.status`.
        state:
          allOf:
          - $ref: '#/components/schemas/StateD0dEnum'
          readOnly: true
          description: |-
            The current state of the payment transaction, it helps to understand the progress of the payment.

            * `created` - Created
            * `pending` - Pending
            * `attempted` - Attempted
            * `authorized` - Authorized
            * `paid` - Paid
            * `failed` - Failed
            * `canceled` - Canceled
            * `expired` - Expired
            * `invalided` - Invalided
            * `refunded` - Refunded
            * `cod` - Cash on Delivery
        type:
          allOf:
          - $ref: '#/components/schemas/Type644Enum'
          description: |-
            The type of the payment transaction. This field represents the purpose of the payment and can be one of several pre-defined choices.

            * `e_commerce` - e_commerce
            * `payment_request` - payment_request
        is_amount_editable:
          type: boolean
          readOnly: true
          title: Editable amount
          description: This field specifies whether the customer can modify the payment
            amount and choose the amount he wishes to pay.
        session_id:
          type: string
          readOnly: true
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
      required:
      - amount
      - apple_pay_available
      - apple_pay_config
      - cards
      - currency_code
      - google_pay_available
      - google_pay_config
      - is_amount_editable
      - language
      - operation
      - payment_methods
      - response
      - session_id
      - state
      - type
    CheckoutSubmit:
      type: object
      description: |-
        This serializer is responsible for validating the data sent by the SDK
        when the user submits the payment form and for creating the url.
      properties:
        amount:
          type: string
          format: decimal
        customer_additional_phone:
          type: string
          description: The customer's additional phone number, if any. This field
            can be updated by the customer on the payment page or in the Checkout
            SDK.
          maxLength: 32
        pg_code:
          allOf:
          - $ref: '#/components/schemas/PgCodeEnum'
          description: |+
            the unique identifier code (`payment_methods[index].code`) for the payment method that the customer has selected to proceed with the transaction.

        save_card:
          type: boolean
          default: false
          description: If true, the card will be saved for future payments. This option
            is only available if the payment gateway supports it.
        status:
          allOf:
          - $ref: '#/components/schemas/CheckoutSubmitStatusEnum'
          readOnly: true
          description: |-
            The status of the payment operation.It can be one of the following values: `success`, `canceled`, `error`

            * `success` - success
            * `error` - error
            * `failed` - failed
        message:
          type: string
          readOnly: true
          description: The message to be displayed to the user.
        redirect_url:
          type: string
          format: uri
          readOnly: true
          description: This field provides the URL to which the customer should be
            redirected in order to complete the payment process when they have selected
            this specific payment method. The developer implementing the SDK must
            ensure that the redirection process is smooth and secure, providing a
            seamless experience for the customer while maintaining the integrity of
            the payment process.
        channel:
          allOf:
          - $ref: '#/components/schemas/ChannelEnum'
          default: web_sdk
          description: |-
            The channel through which the payment is being made.It can be one of the following values: `web_sdk`, `mobile_sdk`

            * `web_sdk` - web_sdk
            * `mobile_sdk` - mobile_sdk
      required:
      - message
      - pg_code
      - redirect_url
      - status
    CheckoutSubmitFailureResponse:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/CheckoutSubmitFailureResponseStatusEnum'
          readOnly: true
          description: |-
            The status of the payment operation.It can be one of the following values: `success`, `canceled`, `error`

            * `error` - error
            * `failed` - failed
        message:
          type: string
          readOnly: true
          description: The message to be displayed to the user.
      required:
      - message
      - status
    CheckoutSubmitFailureResponseStatusEnum:
      enum:
      - error
      - failed
      type: string
      description: |-
        * `error` - error
        * `failed` - failed
    CheckoutSubmitStatusEnum:
      enum:
      - success
      - error
      - failed
      type: string
      description: |-
        * `success` - success
        * `error` - error
        * `failed` - failed
    CheckoutSubmitSuccessResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
          default: success
          description: 'The status of the payment operation.It can be one of the following
            values: `success`, `canceled`, `error`'
        message:
          type: string
          readOnly: true
          description: The message to be displayed to the user.
        redirect_url:
          type: string
          format: uri
          description: This field provides the URL to which the customer should be
            redirected in order to complete the payment process when they have selected
            this specific payment method. The developer implementing the SDK must
            ensure that the redirection process is smooth and secure, providing a
            seamless experience for the customer while maintaining the integrity of
            the payment process.
      required:
      - message
      - redirect_url
      - status
    ChildPayment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          title: Internal ID
          description: This field is an automatically generated internal identifier
            for each payment transaction. This unique and sequential ID makes it easy
            to reference and manage individual transactions within the system.
        state:
          allOf:
          - $ref: '#/components/schemas/core.payment.models.PaymentTransaction.StateChoices'
          description: |-
            The current state of the payment transaction, it helps to understand the progress of the payment.

            * `created` - Created
            * `pending` - Pending
            * `attempted` - Attempted
            * `authorized` - Authorized
            * `paid` - Paid
            * `failed` - Failed
            * `canceled` - Canceled
            * `expired` - Expired
            * `invalided` - Invalided
            * `refunded` - Refunded
            * `cod` - Cash on Delivery
            * `refund_queued` - Refund Queued
            * `refund_rejected` - Refund Rejected
            * `voided` - Voided
        created:
          type: string
          format: date-time
          readOnly: true
        amount:
          type: string
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
          maxLength: 24
        currency_code:
          allOf:
          - $ref: '#/components/schemas/CurrencyCode4f5Enum'
          description: |+
            The currency in which the transaction is denominated. However, it does not guarantee that the payment must be made in this currency, as there can be currency conversions or exchanges resulting in a different currency being charged.

        reference_number:
          type: string
          readOnly: true
          description: An auto-generated internal identifier for this payment transaction.
            While this field may be used for tracking and reporting purposes, it is
            recommended to use the session_id field instead, as it provides the same
            functionality and more.
        session_id:
          type: string
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
          maxLength: 128
        pg_response:
          type: object
          additionalProperties: {}
          readOnly: true
        disclosed_to_merchant:
          type: boolean
          readOnly: true
          title: Disclosed to Merchant?
        disclosed_data:
          type: object
          additionalProperties: {}
          readOnly: true
        webhook_url_error:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - amount
      - created
      - currency_code
      - disclosed_data
      - disclosed_to_merchant
      - id
      - pg_response
      - reference_number
      - webhook_url_error
    ClientErrors:
      oneOf:
      - $ref: '#/components/schemas/FieldErrors'
      - $ref: '#/components/schemas/NestedFieldErrors'
      - $ref: '#/components/schemas/ImmutableTransaction'
      - $ref: '#/components/schemas/GenericErrorMessage'
    CountryEnum:
      enum:
      - AW
      - AF
      - AO
      - AI
      - AX
      - AL
      - AD
      - AE
      - AR
      - AM
      - AS
      - AQ
      - TF
      - AG
      - AU
      - AT
      - AZ
      - BI
      - BE
      - BJ
      - BQ
      - BF
      - BD
      - BG
      - BH
      - BS
      - BA
      - BL
      - BY
      - BZ
      - BM
      - BO
      - BR
      - BB
      - BN
      - BT
      - BV
      - BW
      - CF
      - CA
      - CC
      - CH
      - CL
      - CN
      - CI
      - CM
      - CD
      - CG
      - CK
      - CO
      - KM
      - CV
      - CR
      - CU
      - CW
      - CX
      - KY
      - CY
      - CZ
      - DE
      - DJ
      - DM
      - DK
      - DO
      - DZ
      - EC
      - EG
      - ER
      - EH
      - ES
      - EE
      - ET
      - FI
      - FJ
      - FK
      - FR
      - FO
      - FM
      - GA
      - GB
      - GE
      - GG
      - GH
      - GI
      - GN
      - GP
      - GM
      - GW
      - GQ
      - GR
      - GD
      - GL
      - GT
      - GF
      - GU
      - GY
      - HK
      - HM
      - HN
      - HR
      - HT
      - HU
      - ID
      - IM
      - IN
      - IO
      - IE
      - IR
      - IQ
      - IS
      - IL
      - IT
      - JM
      - JE
      - JO
      - JP
      - KZ
      - KE
      - KG
      - KH
      - KI
      - KN
      - KR
      - KW
      - LA
      - LB
      - LR
      - LY
      - LC
      - LI
      - LK
      - LS
      - LT
      - LU
      - LV
      - MO
      - MF
      - MA
      - MC
      - MD
      - MG
      - MV
      - MX
      - MH
      - MK
      - ML
      - MT
      - MM
      - ME
      - MN
      - MP
      - MZ
      - MR
      - MS
      - MQ
      - MU
      - MW
      - MY
      - YT
      - NA
      - NC
      - NE
      - NF
      - NG
      - NI
      - NU
      - NL
      - 'NO'
      - NP
      - NR
      - NZ
      - OM
      - PK
      - PA
      - PN
      - PE
      - PH
      - PW
      - PG
      - PL
      - PR
      - KP
      - PT
      - PY
      - PS
      - PF
      - QA
      - RE
      - RO
      - RU
      - RW
      - SA
      - SD
      - SN
      - SG
      - GS
      - SH
      - SJ
      - SB
      - SL
      - SV
      - SM
      - SO
      - PM
      - RS
      - SS
      - ST
      - SR
      - SK
      - SI
      - SE
      - SZ
      - SX
      - SC
      - SY
      - TC
      - TD
      - TG
      - TH
      - TJ
      - TK
      - TM
      - TL
      - TO
      - TT
      - TN
      - TR
      - TV
      - TW
      - TZ
      - UG
      - UA
      - UM
      - UY
      - US
      - UZ
      - VA
      - VC
      - VE
      - VG
      - VI
      - VN
      - VU
      - WF
      - WS
      - YE
      - ZA
      - ZM
      - ZW
      type: string
      description: |-
        * `AW` - Aruba
        * `AF` - Afghanistan
        * `AO` - Angola
        * `AI` - Anguilla
        * `AX` - Åland Islands
        * `AL` - Albania
        * `AD` - Andorra
        * `AE` - United Arab Emirates
        * `AR` - Argentina
        * `AM` - Armenia
        * `AS` - American Samoa
        * `AQ` - Antarctica
        * `TF` - French Southern Territories
        * `AG` - Antigua and Barbuda
        * `AU` - Australia
        * `AT` - Austria
        * `AZ` - Azerbaijan
        * `BI` - Burundi
        * `BE` - Belgium
        * `BJ` - Benin
        * `BQ` - Bonaire, Sint Eustatius and Saba
        * `BF` - Burkina Faso
        * `BD` - Bangladesh
        * `BG` - Bulgaria
        * `BH` - Bahrain
        * `BS` - Bahamas
        * `BA` - Bosnia and Herzegovina
        * `BL` - Saint Barthélemy
        * `BY` - Belarus
        * `BZ` - Belize
        * `BM` - Bermuda
        * `BO` - Bolivia, Plurinational State of
        * `BR` - Brazil
        * `BB` - Barbados
        * `BN` - Brunei Darussalam
        * `BT` - Bhutan
        * `BV` - Bouvet Island
        * `BW` - Botswana
        * `CF` - Central African Republic
        * `CA` - Canada
        * `CC` - Cocos (Keeling) Islands
        * `CH` - Switzerland
        * `CL` - Chile
        * `CN` - China
        * `CI` - Côte d'Ivoire
        * `CM` - Cameroon
        * `CD` - Congo, The Democratic Republic of the
        * `CG` - Congo
        * `CK` - Cook Islands
        * `CO` - Colombia
        * `KM` - Comoros
        * `CV` - Cabo Verde
        * `CR` - Costa Rica
        * `CU` - Cuba
        * `CW` - Curaçao
        * `CX` - Christmas Island
        * `KY` - Cayman Islands
        * `CY` - Cyprus
        * `CZ` - Czechia
        * `DE` - Germany
        * `DJ` - Djibouti
        * `DM` - Dominica
        * `DK` - Denmark
        * `DO` - Dominican Republic
        * `DZ` - Algeria
        * `EC` - Ecuador
        * `EG` - Egypt
        * `ER` - Eritrea
        * `EH` - Western Sahara
        * `ES` - Spain
        * `EE` - Estonia
        * `ET` - Ethiopia
        * `FI` - Finland
        * `FJ` - Fiji
        * `FK` - Falkland Islands (Malvinas)
        * `FR` - France
        * `FO` - Faroe Islands
        * `FM` - Micronesia, Federated States of
        * `GA` - Gabon
        * `GB` - United Kingdom
        * `GE` - Georgia
        * `GG` - Guernsey
        * `GH` - Ghana
        * `GI` - Gibraltar
        * `GN` - Guinea
        * `GP` - Guadeloupe
        * `GM` - Gambia
        * `GW` - Guinea-Bissau
        * `GQ` - Equatorial Guinea
        * `GR` - Greece
        * `GD` - Grenada
        * `GL` - Greenland
        * `GT` - Guatemala
        * `GF` - French Guiana
        * `GU` - Guam
        * `GY` - Guyana
        * `HK` - Hong Kong
        * `HM` - Heard Island and McDonald Islands
        * `HN` - Honduras
        * `HR` - Croatia
        * `HT` - Haiti
        * `HU` - Hungary
        * `ID` - Indonesia
        * `IM` - Isle of Man
        * `IN` - India
        * `IO` - British Indian Ocean Territory
        * `IE` - Ireland
        * `IR` - Iran, Islamic Republic of
        * `IQ` - Iraq
        * `IS` - Iceland
        * `IL` - Israel
        * `IT` - Italy
        * `JM` - Jamaica
        * `JE` - Jersey
        * `JO` - Jordan
        * `JP` - Japan
        * `KZ` - Kazakhstan
        * `KE` - Kenya
        * `KG` - Kyrgyzstan
        * `KH` - Cambodia
        * `KI` - Kiribati
        * `KN` - Saint Kitts and Nevis
        * `KR` - Korea, Republic of
        * `KW` - Kuwait
        * `LA` - Lao People's Democratic Republic
        * `LB` - Lebanon
        * `LR` - Liberia
        * `LY` - Libya
        * `LC` - Saint Lucia
        * `LI` - Liechtenstein
        * `LK` - Sri Lanka
        * `LS` - Lesotho
        * `LT` - Lithuania
        * `LU` - Luxembourg
        * `LV` - Latvia
        * `MO` - Macao
        * `MF` - Saint Martin (French part)
        * `MA` - Morocco
        * `MC` - Monaco
        * `MD` - Moldova, Republic of
        * `MG` - Madagascar
        * `MV` - Maldives
        * `MX` - Mexico
        * `MH` - Marshall Islands
        * `MK` - North Macedonia
        * `ML` - Mali
        * `MT` - Malta
        * `MM` - Myanmar
        * `ME` - Montenegro
        * `MN` - Mongolia
        * `MP` - Northern Mariana Islands
        * `MZ` - Mozambique
        * `MR` - Mauritania
        * `MS` - Montserrat
        * `MQ` - Martinique
        * `MU` - Mauritius
        * `MW` - Malawi
        * `MY` - Malaysia
        * `YT` - Mayotte
        * `NA` - Namibia
        * `NC` - New Caledonia
        * `NE` - Niger
        * `NF` - Norfolk Island
        * `NG` - Nigeria
        * `NI` - Nicaragua
        * `NU` - Niue
        * `NL` - Netherlands
        * `NO` - Norway
        * `NP` - Nepal
        * `NR` - Nauru
        * `NZ` - New Zealand
        * `OM` - Oman
        * `PK` - Pakistan
        * `PA` - Panama
        * `PN` - Pitcairn
        * `PE` - Peru
        * `PH` - Philippines
        * `PW` - Palau
        * `PG` - Papua New Guinea
        * `PL` - Poland
        * `PR` - Puerto Rico
        * `KP` - Korea, Democratic People's Republic of
        * `PT` - Portugal
        * `PY` - Paraguay
        * `PS` - Palestine, State of
        * `PF` - French Polynesia
        * `QA` - Qatar
        * `RE` - Réunion
        * `RO` - Romania
        * `RU` - Russian Federation
        * `RW` - Rwanda
        * `SA` - Saudi Arabia
        * `SD` - Sudan
        * `SN` - Senegal
        * `SG` - Singapore
        * `GS` - South Georgia and the South Sandwich Islands
        * `SH` - Saint Helena, Ascension and Tristan da Cunha
        * `SJ` - Svalbard and Jan Mayen
        * `SB` - Solomon Islands
        * `SL` - Sierra Leone
        * `SV` - El Salvador
        * `SM` - San Marino
        * `SO` - Somalia
        * `PM` - Saint Pierre and Miquelon
        * `RS` - Serbia
        * `SS` - South Sudan
        * `ST` - Sao Tome and Principe
        * `SR` - Suriname
        * `SK` - Slovakia
        * `SI` - Slovenia
        * `SE` - Sweden
        * `SZ` - Eswatini
        * `SX` - Sint Maarten (Dutch part)
        * `SC` - Seychelles
        * `SY` - Syrian Arab Republic
        * `TC` - Turks and Caicos Islands
        * `TD` - Chad
        * `TG` - Togo
        * `TH` - Thailand
        * `TJ` - Tajikistan
        * `TK` - Tokelau
        * `TM` - Turkmenistan
        * `TL` - Timor-Leste
        * `TO` - Tonga
        * `TT` - Trinidad and Tobago
        * `TN` - Tunisia
        * `TR` - Turkey
        * `TV` - Tuvalu
        * `TW` - Taiwan, Province of China
        * `TZ` - Tanzania, United Republic of
        * `UG` - Uganda
        * `UA` - Ukraine
        * `UM` - United States Minor Outlying Islands
        * `UY` - Uruguay
        * `US` - United States
        * `UZ` - Uzbekistan
        * `VA` - Holy See (Vatican City State)
        * `VC` - Saint Vincent and the Grenadines
        * `VE` - Venezuela, Bolivarian Republic of
        * `VG` - Virgin Islands, British
        * `VI` - Virgin Islands, U.S.
        * `VN` - Viet Nam
        * `VU` - Vanuatu
        * `WF` - Wallis and Futuna
        * `WS` - Samoa
        * `YE` - Yemen
        * `ZA` - South Africa
        * `ZM` - Zambia
        * `ZW` - Zimbabwe
    CurrencyCode4f5Enum:
      enum: []
      type: boolean
    CustomerBillingAddress:
      type: object
      properties:
        line1:
          type: string
          title: Address Line 1
        line2:
          type: string
          title: Address Line 2
        city:
          type: string
        state:
          type: string
        country:
          type: string
        postal_code:
          type: string
      required:
      - city
      - country
      - line1
      - line2
      - postal_code
      - state
    EnvironmentEnum:
      enum:
      - TEST
      - PRODUCTION
      type: string
      description: |-
        * `TEST` - TEST
        * `PRODUCTION` - PRODUCTION
    ErrorSessionValidation:
      type: object
      properties:
        message:
          type: string
          default: Permission error while connecting to Apple servers. Contact the
            website administrator.
    ExtraInner:
      type: object
      description: |-
        Serializer for extra data aka dynamic fields.
        Extra data can accept any value by default. However,
        if the merchant wants to enforce a specific type, they can
        use the plugins.Field class to do so. All CUSTOM fields are
        validated inside extra field.

        Implementation:
            - requires to have a config property in the parent
            serializer which has to return a PluginConfig instance,
            to which fields are attached.
      properties:
        customer_first_name:
          type: string
          title: First Name
        order_no:
          type: string
      required:
      - customer_first_name
      - order_no
    FieldErrors:
      type: object
      properties:
        field_name:
          type: array
          items:
            type: string
            default: This field is required.
    FlowEnum:
      enum:
      - card
      - redirect
      type: string
      description: |-
        * `card` - Card
        * `redirect` - Redirect
    FourZeroFour:
      type: object
      description: Serializer for 404 responses.
      properties:
        detail:
          type: string
          default: Not found.
    FourZeroOne:
      type: object
      description: Serializer for 401 and 403 responses.
      properties:
        detail:
          type: string
          default: Authentication credentials were not provided.
    GenericErrorMessage:
      type: object
      properties:
        detail:
          type: string
          default: Something went wrong.
    GooglePayConfigOutput:
      type: object
      description: Base serializer for payment configuration, to be used in SDK clients
        like web and mobile.
      properties:
        code:
          type: string
          description: The payment service code.
          pattern: ^[-a-zA-Z0-9_]+$
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            This field specifies the environment to use for the payment, either 'TEST' or 'PRODUCTION'. In the TEST environment, transactions are not processed and can be used to test the integration. In the PRODUCTION environment, transactions are processed and real money is involved

            * `TEST` - TEST
            * `PRODUCTION` - PRODUCTION
        gateway:
          type: string
          nullable: true
          description: This field specifies the name of the payment gateway to use.
            Payment gateways are third-party services that facilitate payment transactions
            between merchants and customers. If this field is not provided, the default
            payment gateway configured on the backend will be used.
          maxLength: 24
        gateway_merchant_id:
          type: string
          description: This field specifies the merchant ID for the payment gateway.
            This ID is used by the payment gateway to identify the merchant and route
            the payment transaction to the correct account. If you are unsure what
            value to use for this field, please consult the documentation provided
            by your payment gateway provider.
          maxLength: 256
        merchant_id:
          type: string
          description: This field specifies the ID of the merchant accepting the payment.
            This ID is used by Google Pay to identify the merchant and associate the
            payment transaction with the correct merchant account.
          maxLength: 100
        merchant_name:
          type: string
          description: This field specifies the name of the merchant accepting the
            payment. This name will be displayed to the user during the payment process
            and on their payment confirmation
          maxLength: 25
        total_price:
          type: string
          description: This field specifies the total price for the payment, including
            any fees. The price should be formatted as a string with the decimal point
            as a period, e.g. '10.99'.
          maxLength: 20
        currency_code:
          type: string
          description: This field specifies the ISO 4217 currency code for the payment.
            This code is used to specify the currency of the payment transaction.
            If you are unsure what value to use for this field, please consult the
            documentation provided by your payment gateway provider.
          maxLength: 10
        country_code:
          type: string
          description: This field specifies the ISO 3166-1 alpha-2 country code for
            the payment currency. This code is used to specify the country of the
            payment transaction. If you are unsure what value to use for this field,
            please consult the documentation provided by your payment gateway provider.
          maxLength: 2
        fee:
          type: string
          description: The fee for the payment.
          maxLength: 20
        payment_url:
          type: string
          format: uri
          description: The URL to use for submitting the payment.
          maxLength: 2000
      required:
      - code
      - country_code
      - currency_code
      - environment
      - fee
      - gateway
      - gateway_merchant_id
      - merchant_id
      - merchant_name
      - payment_url
      - total_price
    GooglePayPaymentData:
      type: object
      description: |-
        Serializer for Google Pay payment, which is used to validate
        the payment data sent from the SDK client.

        OrderSerializer must be added also in the mixin classes
        for minimal amount validation

        This deserialize the data sent from the SDK client, namely the
        paymentData https://developers.google.com/pay/api/web/reference/response-objects#PaymentData

        {
            "apiVersion": 2,
            "apiVersionMinor": 0,
            "paymentMethodData": {
                "type": "CARD",
                "description": "Visa 1234",
                "info": {
                    "cardNetwork": "VISA",
                    "cardDetails": "1234",
                    "billingAddress": {
                        "name": "John Smith",
                        "phoneNumber": "+16505551234",
                        "postalAddress": {
                            "addressLines": ["1234 Main Street"],
                            "locality": "Mountain View",
                            "administrativeArea": "CA",
                            "postalCode": "94043",
                            "countryCode": "US",
                        },
                    },
                },
                "tokenizationData": {
                    "type": "PAYMENT_GATEWAY",
                    "token": "dummy_payment_token",
                },
            },
            "email": "customer@example.com",
            "shippingAddress": {
                "name": "John Smith",
                "phoneNumber": "+16505551234",
                "postalAddress": {
                    "addressLines": ["1234 Main Street"],
                    "locality": "Mountain View",
                    "administrativeArea": "CA",
                    "postalCode": "94043",
                    "countryCode": "US",
                },
            },
        }
      properties:
        apiVersion:
          type: integer
          description: The version of the Google Pay API used to process the payment.
        apiVersionMinor:
          type: integer
          description: The minor version of the Google Pay API used to process the
            payment.
        paymentMethodData:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodData'
          description: The payment method data.
        email:
          type: string
          format: email
          description: The email address of the customer.
        shippingAddress:
          type: object
          additionalProperties: {}
          description: The shipping address of the customer.
      required:
      - apiVersion
      - apiVersionMinor
      - paymentMethodData
    ImmutableTransaction:
      type: object
      properties:
        detail:
          type: string
          default: This transaction cannot be changed anymore.
    Initiator:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone:
          type: string
          title: Phone number
          maxLength: 128
      required:
      - email
      - id
      - username
    LanguageEnum:
      enum:
      - en
      - ar
      type: string
      description: |-
        * `en` - English
        * `ar` - Arabic
    LogEntry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        action:
          allOf:
          - $ref: '#/components/schemas/ActionEnum'
          minimum: 0
          maximum: 65535
        changes:
          type: object
          additionalProperties: {}
        remote_addr:
          type: string
          nullable: true
          title: Remote address
        timestamp:
          type: string
          format: date-time
          readOnly: true
        additional_data:
          type: object
          additionalProperties: {}
          nullable: true
        actor:
          $ref: '#/components/schemas/Initiator'
      required:
      - action
      - actor
      - changes
      - id
      - timestamp
    MailLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        is_sent:
          type: boolean
        event_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SmsEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        forced:
          type: boolean
        provider:
          type: string
          readOnly: true
        backend:
          type: string
          readOnly: true
        mail_logs:
          type: array
          items:
            $ref: '#/components/schemas/MailLogEmail'
      required:
      - backend
      - created
      - id
      - mail_logs
      - provider
    MailLogEmail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          title: Recipient
          maxLength: 350
        mail_type:
          $ref: '#/components/schemas/MailTypeEnum'
      required:
      - email
      - id
      - mail_type
    MailTypeEnum:
      enum:
      - cc
      - bcc
      - to
      type: string
      description: |-
        * `cc` - CC
        * `bcc` - BCC
        * `to` - TO
    ModeEnum:
      enum:
      - payment
      type: string
      description: '* `payment` - payment'
    Nested:
      type: object
      properties:
        field_name:
          type: array
          items:
            type: string
            default: To use sms notifications provide the `customer_phone` field.
      required:
      - field_name
    NestedFieldErrors:
      type: object
      properties:
        field_name:
          $ref: '#/components/schemas/Nested'
      required:
      - field_name
    NotFound:
      type: object
      properties:
        detail:
          type: string
          default: Not found.
    NotificationSet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 24
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
    Notifications:
      type: object
      properties:
        email:
          type: array
          items:
            $ref: '#/components/schemas/SmsEnum'
        sms:
          type: array
          items:
            $ref: '#/components/schemas/SmsEnum'
    NullEnum:
      enum:
      - null
    OperationEnum:
      enum:
      - purchase
      - authorize
      type: string
      description: |-
        * `purchase` - Purchase
        * `authorize` - Authorize
    ParentToken:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/Token'
      required:
      - token
    PayApplePay:
      type: object
      description: Handles the incoming Apple Pay payment request
      properties:
        code:
          type: string
          description: Code to identify the service in the API/URLs/etc
        amount:
          type: string
        session_id:
          type: string
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        apple_pay_payload:
          $ref: '#/components/schemas/ApplePayPayload'
      required:
      - amount
      - apple_pay_payload
      - code
      - session_id
    PayGooglePay:
      type: object
      description: Handle incoming payment data from Google Pay SDK client.
      properties:
        code:
          type: string
          description: Code to identify the service in the API/URLs/etc
        amount:
          type: string
        session_id:
          type: string
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        google_pay_payload:
          allOf:
          - $ref: '#/components/schemas/GooglePayPaymentData'
          description: GooglePay payment data received from GooglePay.
      required:
      - amount
      - code
      - google_pay_payload
      - session_id
    PayViewFailResponse:
      type: object
      properties:
        approved:
          type: boolean
          default: false
          description: Whether the payment was approved or not.
        message:
          type: string
          description: Success message
      required:
      - message
    PayViewSuccessResponse:
      type: object
      description: |-
        Serializer for the response of the PayView of the payment services like
        Apple Pay, Google Pay, etc.

        The responses are aligned for all payment services.
      properties:
        approved:
          type: boolean
          default: true
          description: Whether the payment was approved or not.
        message:
          type: string
          description: Success message
        redirect_url:
          type: string
          format: uri
          description: The URL where the customer should be redirected to after the
            payment.
      required:
      - message
      - redirect_url
    Payment:
      type: object
      description: |-
        This Payment models its used solely for PaymentTransaction detail page.
        Cannot be instantiated without an instance of PaymentTransaction.
      properties:
        id:
          type: integer
          readOnly: true
          title: Internal ID
          description: This field is an automatically generated internal identifier
            for each payment transaction. This unique and sequential ID makes it easy
            to reference and manage individual transactions within the system.
        type:
          allOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          readOnly: true
          description: |-
            The type of the payment transaction. This field represents the purpose of the payment and can be one of several pre-defined choices.

            * `e_commerce` - E-Commerce
            * `payment_request` - Payment request
            * `bulk` - Bulk Payment Request
            * `catalogue` - Catalogue purchase
            * `customer_payment` - Customer payment
            * `shopify` - Shopify
            * `event` - Event management and booking
            * `food_ordering` - Food ordering
            * `iata` - IATA
            * `real_estate` - Real Estate
        state:
          allOf:
          - $ref: '#/components/schemas/core.payment.models.PaymentTransaction.StateChoices'
          readOnly: true
          description: |-
            The current state of the payment transaction, it helps to understand the progress of the payment.

            * `created` - Created
            * `pending` - Pending
            * `attempted` - Attempted
            * `authorized` - Authorized
            * `paid` - Paid
            * `failed` - Failed
            * `canceled` - Canceled
            * `expired` - Expired
            * `invalided` - Invalided
            * `refunded` - Refunded
            * `cod` - Cash on Delivery
            * `refund_queued` - Refund Queued
            * `refund_rejected` - Refund Rejected
            * `voided` - Voided
        order_no:
          type: string
          nullable: true
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
          maxLength: 128
        session_id:
          type: string
          readOnly: true
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
          maxLength: 128
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        state_changed_at:
          type: string
          format: date-time
          readOnly: true
          description: A timestamp indicating when the state of this payment transaction
            was last updated. This field may be used to track changes in the state
            of the payment transaction over time.
        invalidation_reason:
          type: string
          readOnly: true
          description: If the payment transaction was invalidated, this field contains
            the reason for it.
        initiator:
          allOf:
          - $ref: '#/components/schemas/Initiator'
          readOnly: true
        payment_url:
          type: string
          format: url
          readOnly: true
        shortify_checkout_url:
          type: boolean
          default: false
          description: If enabled, the checkout URL will be shortened using the configured
            URL shortener.
        short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL link that, when opened, redirects to the checkout
            page for this payment. This URL may be shared with the customer to allow
            them to easily access and complete the payment.
          maxLength: 200
        unit_config:
          allOf:
          - $ref: '#/components/schemas/Unit'
          title: Unit
        email_recipients:
          type: string
          description: A comma-separated list of email addresses for internal recipients
            who will receive customer emails. These recipients will be included in
            email notifications sent to the customer regarding their payment.
        notifications:
          type: object
          additionalProperties: {}
          title: Notification settings
          description: A JSON field that contains the notification settings for this
            payment transaction, including SMS and email notifications, as well as
            the events for which they will be sent (e.g., 'created', 'paid', 'refund',
            'canceled', etc.). This field may be used to configure and customize the
            notifications sent to customers and internal recipients throughout the
            payment process.
        gateway_code:
          type: string
          readOnly: true
          description: Represents the payment gateway code that was used to perform
            the payment or authorization.
          maxLength: 16
        currency_code:
          allOf:
          - $ref: '#/components/schemas/PaymentCurrencyCodeEnum'
          description: |-
            The currency in which the transaction is denominated. However, it does not guarantee that the payment must be made in this currency, as there can be currency conversions or exchanges resulting in a different currency being charged.

            * `AED` - AED
            * `AFN` - AFN
            * `ALL` - ALL
            * `AMD` - AMD
            * `ANG` - ANG
            * `AOA` - AOA
            * `ARS` - ARS
            * `AUD` - AUD
            * `AWG` - AWG
            * `AZN` - AZN
            * `BAM` - BAM
            * `BBD` - BBD
            * `BDT` - BDT
            * `BGN` - BGN
            * `BHD` - BHD
            * `BIF` - BIF
            * `BMD` - BMD
            * `BND` - BND
            * `BOB` - BOB
            * `BOV` - BOV
            * `BRL` - BRL
            * `BSD` - BSD
            * `BTN` - BTN
            * `BWP` - BWP
            * `BYN` - BYN
            * `BZD` - BZD
            * `CAD` - CAD
            * `CDF` - CDF
            * `CHE` - CHE
            * `CHF` - CHF
            * `CHW` - CHW
            * `CLF` - CLF
            * `CLP` - CLP
            * `CNY` - CNY
            * `COP` - COP
            * `COU` - COU
            * `CRC` - CRC
            * `CUC` - CUC
            * `CUP` - CUP
            * `CVE` - CVE
            * `CZK` - CZK
            * `DJF` - DJF
            * `DKK` - DKK
            * `DOP` - DOP
            * `DZD` - DZD
            * `EGP` - EGP
            * `ERN` - ERN
            * `ETB` - ETB
            * `EUR` - EUR
            * `FJD` - FJD
            * `FKP` - FKP
            * `GBP` - GBP
            * `GEL` - GEL
            * `GHS` - GHS
            * `GIP` - GIP
            * `GMD` - GMD
            * `GNF` - GNF
            * `GTQ` - GTQ
            * `GYD` - GYD
            * `HKD` - HKD
            * `HNL` - HNL
            * `HRK` - HRK
            * `HTG` - HTG
            * `HUF` - HUF
            * `IDR` - IDR
            * `ILS` - ILS
            * `INR` - INR
            * `IQD` - IQD
            * `IRR` - IRR
            * `ISK` - ISK
            * `JMD` - JMD
            * `JOD` - JOD
            * `JPY` - JPY
            * `KES` - KES
            * `KGS` - KGS
            * `KHR` - KHR
            * `KMF` - KMF
            * `KPW` - KPW
            * `KRW` - KRW
            * `KWD` - KWD
            * `KYD` - KYD
            * `KZT` - KZT
            * `LAK` - LAK
            * `LBP` - LBP
            * `LKR` - LKR
            * `LRD` - LRD
            * `LSL` - LSL
            * `LYD` - LYD
            * `MAD` - MAD
            * `MDL` - MDL
            * `MGA` - MGA
            * `MKD` - MKD
            * `MMK` - MMK
            * `MNT` - MNT
            * `MOP` - MOP
            * `MRU` - MRU
            * `MUR` - MUR
            * `MVR` - MVR
            * `MWK` - MWK
            * `MXN` - MXN
            * `MXV` - MXV
            * `MYR` - MYR
            * `MZN` - MZN
            * `NAD` - NAD
            * `NGN` - NGN
            * `NIO` - NIO
            * `NOK` - NOK
            * `NPR` - NPR
            * `NZD` - NZD
            * `OMR` - OMR
            * `PAB` - PAB
            * `PEN` - PEN
            * `PGK` - PGK
            * `PHP` - PHP
            * `PKR` - PKR
            * `PLN` - PLN
            * `PYG` - PYG
            * `QAR` - QAR
            * `RON` - RON
            * `RSD` - RSD
            * `RUB` - RUB
            * `RWF` - RWF
            * `SAR` - SAR
            * `SBD` - SBD
            * `SCR` - SCR
            * `SDG` - SDG
            * `SEK` - SEK
            * `SGD` - SGD
            * `SHP` - SHP
            * `SLE` - SLE
            * `SLL` - SLL
            * `SOS` - SOS
            * `SRD` - SRD
            * `SSP` - SSP
            * `STN` - STN
            * `SVC` - SVC
            * `SYP` - SYP
            * `SZL` - SZL
            * `THB` - THB
            * `TJS` - TJS
            * `TMT` - TMT
            * `TND` - TND
            * `TOP` - TOP
            * `TRY` - TRY
            * `TTD` - TTD
            * `TWD` - TWD
            * `TZS` - TZS
            * `UAH` - UAH
            * `UGX` - UGX
            * `USD` - USD
            * `USN` - USN
            * `UYI` - UYI
            * `UYU` - UYU
            * `UYW` - UYW
            * `UZS` - UZS
            * `VED` - VED
            * `VES` - VES
            * `VND` - VND
            * `VUV` - VUV
            * `WST` - WST
            * `XAF` - XAF
            * `XAG` - XAG
            * `XAU` - XAU
            * `XBA` - XBA
            * `XBB` - XBB
            * `XBC` - XBC
            * `XBD` - XBD
            * `XCD` - XCD
            * `XDR` - XDR
            * `XOF` - XOF
            * `XPD` - XPD
            * `XPF` - XPF
            * `XPT` - XPT
            * `XSU` - XSU
            * `XTS` - XTS
            * `XUA` - XUA
            * `XXX` - XXX
            * `YER` - YER
            * `ZAR` - ZAR
            * `ZMW` - ZMW
            * `ZWL` - ZWL
        pg_codes:
          type: object
          additionalProperties: {}
          title: Payment Gateway Codes
          description: The list of payment gateway codes from which a customer can
            select to perform the payment or authorization.
        payment_service:
          type: string
          readOnly: true
          description: The payment service the customer has used to make the payment,
            such as Apple Pay, Samsung Pay, Google Pay, or another payment service.
            This field may be used to track the payment method used by the customer
            and to help with accounting and reporting.
          maxLength: 32
        service_code:
          type: string
          readOnly: true
          title: Payment service code
          description: The service code is used to identify the payment service that
            was used to perform the payment or authorization.
          maxLength: 16
        operation:
          allOf:
          - $ref: '#/components/schemas/OperationEnum'
          readOnly: true
          description: |-
            Specifies the type of operation to be performed by the payment gateway. If set to 'purchase', the payment source will be directly charged. If set to 'authorize', the payment source will only be authorized and the actual charge will be made at a later time.

            * `purchase` - Purchase
            * `authorize` - Authorize
        is_sandbox:
          type: boolean
          readOnly: true
          title: Is Sandbox?
          description: Designates if this payment done with sandbox or production
            gateway type?
        is_amount_editable:
          type: boolean
          readOnly: true
          title: Editable amount
          description: This field specifies whether the customer can modify the payment
            amount and choose the amount he wishes to pay.
        amount:
          type: string
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
          maxLength: 24
        settled_amount:
          type: number
          format: double
          description: The paid or authorized amount in the original currency, excluding
            any fees or charges.
          readOnly: true
        paid_amount:
          oneOf:
          - type: number
            format: double
          - type: string
          description: Total paid amount in the original currency, with fee. This
            calculation might be the result of currency exchange if it was paid in
            different currency.
          readOnly: true
        fee:
          type: string
          description: Fee represents the amount paid by the customer in the currency
            they used for the payment. This currency may differ from the currency
            of the transaction.
          readOnly: true
        refunded_amount:
          type: number
          format: double
          readOnly: true
          description: The total amount which has been refunded back to the customer
            in the original currency, including any fees or charges that were applied
            to the transaction.
        voided_amount:
          type: number
          format: double
          readOnly: true
          description: The total amount which has been voided back to the customer
            in the original currency, including any fees or charges that were applied
            to the transaction.
        delivery_fee:
          type: string
          readOnly: true
          description: This field represents the delivery fee for the order. It is
            applicable only for catalogue transactions.
          maxLength: 120
        webhook_url:
          type: string
          format: uri
          description: 'URL where the payment result will be sent via a POST request
            after the customer has completed the payment session. The payment result
            will be included in the request body. '
        redirect_url:
          type: string
          format: uri
          description: The URL where the customer will be redirected after the payment
            stage only if the webhook URL returns a success status.
          maxLength: 200
        vendor_name:
          type: string
          description: The name of the vendor or merchant associated with this payment.
            This field may be used for accounting and reporting purposes.
          maxLength: 64
        product_type:
          type: string
          description: The type of product or service being purchased. This field
            may be used for tracking and reporting purposes.
          maxLength: 128
        capture_delivery_location:
          type: boolean
          title: Capture delivery coordinates
          description: 'By enabling this, you will ask for user''s delivery location
            on a map. '
        capture_delivery_address:
          type: boolean
          description: By enabling this, you will ask for user's address. If enabled,
            capture delivery coordinates should also be active.
        customer_id:
          type: string
          readOnly: true
          description: The customer ID is a unique identifier for the customer within
            the merchant's system. It is also used as a merchant identifier for the
            customer and plays a critical role in tokenization. All the customer's
            cards will be associated with this ID.
          maxLength: 64
        customer_first_name:
          type: string
          description: The first name of the recipient of the payment. This field
            is used for various communications such as the invoice, receipt, email,
            SMS, or displayed on the payment page. It may also be sent to the payment
            gateway if necessary.
          maxLength: 64
        customer_last_name:
          type: string
          description: The last name of the recipient of the payment. This field is
            used for various communications such as the invoice, receipt, email, SMS,
            or displayed on the payment page. It may also be sent to the payment gateway
            if necessary.
          maxLength: 64
        customer_email:
          type: string
          description: The email address of the customer that is used to send payment
            notifications and receipts, and can be used for fraud prevention. This
            field is mandatory and is always sent to the payment gateway. It may also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 128
        customer_phone:
          type: string
          description: Customer phone number associated with the payment. This might
            be sent to the payment gateway and depending on the gateway, it may trigger
            a click to pay process on the payment page. The phone number will also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 32
        customer_additional_phone:
          type: string
          description: The customer's additional phone number, if any. This field
            can be updated by the customer on the payment page or in the Checkout
            SDK.
          maxLength: 32
        customer_billing_address:
          allOf:
          - $ref: '#/components/schemas/CustomerBillingAddress'
          readOnly: true
          description: Represents the billing address of the customer, which will
            be used for the payment transaction. This information might be used by
            the payment gateway to verify the identity of the customer. It can be
            displayed on the payment page, invoice, receipt, email, etc.
        customer_shipping_address:
          type: object
          additionalProperties: {}
          title: Shipping address
          description: The shipping address of the customer where the product or service
            will be delivered to. This information might be used for fraud prevention
            and it can be displayed on the invoice, receipt, email and other communication
            sent to the customer.
        seen_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: A timestamp indicating when the payment link associated with
            this payment was seen or opened by the customer or any other guest user.
            This field may be used to track when payment links have been accessed.
        email_seen_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: A timestamp indicating when the email notification associated
            with this payment was seen or opened by the customer or any other guest
            user. This field may be used to track when email notifications have been
            viewed.
        due_datetime:
          type: string
          format: date-time
          nullable: true
          title: Due date and time
          description: The date and time by which the payment is due. This field may
            be used to help remind the customer to complete the payment before the
            due date.
        notification_set:
          allOf:
          - $ref: '#/components/schemas/NotificationSet'
          readOnly: true
        expiration_time:
          type: string
          nullable: true
          description: If defined, any payment transactions created more than the
            defined period of time ago will be invalidated or expired if the customer
            tries to pay them. This field may be used to help ensure that payment
            transactions are processed in a timely manner.
        shortify_attachment_url:
          type: boolean
          default: false
          description: If enabled, the attachment URL will be shortened using the
            configured URL shortener.
        attachment:
          type: string
          format: uri
          nullable: true
          description: An optional attachment that will be included in email notifications
            sent to the customer regarding their payment, and also be available for
            download on the checkout page. This field may be used to provide the customer
            with additional information or documentation related to their purchase.
        attachment_short_url:
          type: string
          format: uri
          description: A short URL that links to the attachment associated with this
            payment. This URL may be included in email/sms notifications sent to the
            customer regarding their payment or displayed on the checkout page to
            allow the customer to easily access the attachment.
          maxLength: 200
        receipt_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL that links to the receipt associated with this
            payment. This URL may be included in email/sms notifications sent to the
            customer regarding their payment or displayed on the checkout page to
            allow the customer to easily access their receipt.
          maxLength: 5000
        qr_code_url:
          type: string
          format: url
          readOnly: true
          description: A QR code that, when scanned, redirects to the checkout page
            for this payment. This QR code may be displayed on invoices, receipts,
            or other documents to allow customers to easily access the checkout page
            and make a payment. This parameter is only present when `generate_qr_code`
            is set to true.
        extra:
          allOf:
          - $ref: '#/components/schemas/ExtraInner'
          readOnly: true
        data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Used to store useful information for internal purposes
        bulk:
          allOf:
          - $ref: '#/components/schemas/Bulk'
          readOnly: true
        transaction_log_id:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          readOnly: true
          nullable: true
          description: Identifies the transaction log associated with the payment
            transaction. A transaction log is created for each record that is dispatched
            during a bulk dispatch process.
        txns:
          type: array
          items:
            $ref: '#/components/schemas/ChildPayment'
          readOnly: true
          title: Child Transactions
        attempts:
          type: array
          items:
            $ref: '#/components/schemas/Attempt'
          readOnly: true
        notification_triggers:
          type: array
          items:
            $ref: '#/components/schemas/MailLog'
          readOnly: true
          title: Mail logs
        log_entries:
          allOf:
          - $ref: '#/components/schemas/LogEntry'
          readOnly: true
      required:
      - amount
      - attempts
      - bulk
      - created
      - currency_code
      - customer_billing_address
      - customer_id
      - data
      - delivery_fee
      - email_seen_at
      - extra
      - fee
      - gateway_code
      - id
      - initiator
      - invalidation_reason
      - is_amount_editable
      - is_sandbox
      - log_entries
      - modified
      - notification_set
      - notification_triggers
      - operation
      - paid_amount
      - payment_service
      - payment_url
      - qr_code_url
      - receipt_short_url
      - refunded_amount
      - seen_at
      - service_code
      - session_id
      - settled_amount
      - short_url
      - state
      - state_changed_at
      - transaction_log_id
      - txns
      - type
      - unit_config
      - voided_amount
    PaymentCurrencyCodeEnum:
      enum:
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYN
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRU
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLE
      - SLL
      - SOS
      - SRD
      - SSP
      - STN
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - UYI
      - UYU
      - UYW
      - UZS
      - VED
      - VES
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XSU
      - XTS
      - XUA
      - XXX
      - YER
      - ZAR
      - ZMW
      - ZWL
      type: string
      description: |-
        * `AED` - AED
        * `AFN` - AFN
        * `ALL` - ALL
        * `AMD` - AMD
        * `ANG` - ANG
        * `AOA` - AOA
        * `ARS` - ARS
        * `AUD` - AUD
        * `AWG` - AWG
        * `AZN` - AZN
        * `BAM` - BAM
        * `BBD` - BBD
        * `BDT` - BDT
        * `BGN` - BGN
        * `BHD` - BHD
        * `BIF` - BIF
        * `BMD` - BMD
        * `BND` - BND
        * `BOB` - BOB
        * `BOV` - BOV
        * `BRL` - BRL
        * `BSD` - BSD
        * `BTN` - BTN
        * `BWP` - BWP
        * `BYN` - BYN
        * `BZD` - BZD
        * `CAD` - CAD
        * `CDF` - CDF
        * `CHE` - CHE
        * `CHF` - CHF
        * `CHW` - CHW
        * `CLF` - CLF
        * `CLP` - CLP
        * `CNY` - CNY
        * `COP` - COP
        * `COU` - COU
        * `CRC` - CRC
        * `CUC` - CUC
        * `CUP` - CUP
        * `CVE` - CVE
        * `CZK` - CZK
        * `DJF` - DJF
        * `DKK` - DKK
        * `DOP` - DOP
        * `DZD` - DZD
        * `EGP` - EGP
        * `ERN` - ERN
        * `ETB` - ETB
        * `EUR` - EUR
        * `FJD` - FJD
        * `FKP` - FKP
        * `GBP` - GBP
        * `GEL` - GEL
        * `GHS` - GHS
        * `GIP` - GIP
        * `GMD` - GMD
        * `GNF` - GNF
        * `GTQ` - GTQ
        * `GYD` - GYD
        * `HKD` - HKD
        * `HNL` - HNL
        * `HRK` - HRK
        * `HTG` - HTG
        * `HUF` - HUF
        * `IDR` - IDR
        * `ILS` - ILS
        * `INR` - INR
        * `IQD` - IQD
        * `IRR` - IRR
        * `ISK` - ISK
        * `JMD` - JMD
        * `JOD` - JOD
        * `JPY` - JPY
        * `KES` - KES
        * `KGS` - KGS
        * `KHR` - KHR
        * `KMF` - KMF
        * `KPW` - KPW
        * `KRW` - KRW
        * `KWD` - KWD
        * `KYD` - KYD
        * `KZT` - KZT
        * `LAK` - LAK
        * `LBP` - LBP
        * `LKR` - LKR
        * `LRD` - LRD
        * `LSL` - LSL
        * `LYD` - LYD
        * `MAD` - MAD
        * `MDL` - MDL
        * `MGA` - MGA
        * `MKD` - MKD
        * `MMK` - MMK
        * `MNT` - MNT
        * `MOP` - MOP
        * `MRU` - MRU
        * `MUR` - MUR
        * `MVR` - MVR
        * `MWK` - MWK
        * `MXN` - MXN
        * `MXV` - MXV
        * `MYR` - MYR
        * `MZN` - MZN
        * `NAD` - NAD
        * `NGN` - NGN
        * `NIO` - NIO
        * `NOK` - NOK
        * `NPR` - NPR
        * `NZD` - NZD
        * `OMR` - OMR
        * `PAB` - PAB
        * `PEN` - PEN
        * `PGK` - PGK
        * `PHP` - PHP
        * `PKR` - PKR
        * `PLN` - PLN
        * `PYG` - PYG
        * `QAR` - QAR
        * `RON` - RON
        * `RSD` - RSD
        * `RUB` - RUB
        * `RWF` - RWF
        * `SAR` - SAR
        * `SBD` - SBD
        * `SCR` - SCR
        * `SDG` - SDG
        * `SEK` - SEK
        * `SGD` - SGD
        * `SHP` - SHP
        * `SLE` - SLE
        * `SLL` - SLL
        * `SOS` - SOS
        * `SRD` - SRD
        * `SSP` - SSP
        * `STN` - STN
        * `SVC` - SVC
        * `SYP` - SYP
        * `SZL` - SZL
        * `THB` - THB
        * `TJS` - TJS
        * `TMT` - TMT
        * `TND` - TND
        * `TOP` - TOP
        * `TRY` - TRY
        * `TTD` - TTD
        * `TWD` - TWD
        * `TZS` - TZS
        * `UAH` - UAH
        * `UGX` - UGX
        * `USD` - USD
        * `USN` - USN
        * `UYI` - UYI
        * `UYU` - UYU
        * `UYW` - UYW
        * `UZS` - UZS
        * `VED` - VED
        * `VES` - VES
        * `VND` - VND
        * `VUV` - VUV
        * `WST` - WST
        * `XAF` - XAF
        * `XAG` - XAG
        * `XAU` - XAU
        * `XBA` - XBA
        * `XBB` - XBB
        * `XBC` - XBC
        * `XBD` - XBD
        * `XCD` - XCD
        * `XDR` - XDR
        * `XOF` - XOF
        * `XPD` - XPD
        * `XPF` - XPF
        * `XPT` - XPT
        * `XSU` - XSU
        * `XTS` - XTS
        * `XUA` - XUA
        * `XXX` - XXX
        * `YER` - YER
        * `ZAR` - ZAR
        * `ZMW` - ZMW
        * `ZWL` - ZWL
    PaymentMethodData:
      type: object
      description: https://developers.google.com/pay/api/web/reference/response-objects#PaymentMethodData
      properties:
        type:
          type: string
          description: The type of payment method data.
        description:
          type: string
          description: The description of the payment method.
        info:
          type: object
          additionalProperties: {}
          description: The payment method info.
        tokenizationData:
          type: object
          additionalProperties: {}
          description: The tokenization data.
      required:
      - description
      - info
      - tokenizationData
      - type
    PaymentMethodEnum:
      enum:
      - card
      - token
      type: string
      description: |-
        * `card` - card
        * `token` - token
    PaymentMethodsForRedirect:
      type: object
      properties:
        code:
          type: string
          description: The slug code of the payment method.
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          description: The name of the payment method.
        pg:
          type: string
          description: The payment gateway of the payment.
        type:
          allOf:
          - $ref: '#/components/schemas/Type644Enum'
          description: |-
            The type of the payment transaction.

            * `e_commerce` - e_commerce
            * `payment_request` - payment_request
        amount:
          type: string
          description: The total amount to be charged, including fees.
        currency_code:
          type: string
          description: The currency code for the payment method represented as an
            ISO 4217 code.
          maxLength: 3
        fee:
          type: string
          description: The fee charged by the payment gateway.
        fee_description:
          type: string
          description: The description of the fee charged by the payment gateway.
        icon:
          type: string
          format: uri
          description: The URL of the icon for the payment method.
        flow:
          allOf:
          - $ref: '#/components/schemas/FlowEnum'
          description: |-
            The flow type of the payment method.

            * `card` - Card
            * `redirect` - Redirect
        redirect_url:
          type: string
          format: uri
          nullable: true
          description: The URL where the customer should be redirected to perform
            the payment.
      required:
      - amount
      - code
      - currency_code
      - fee
      - fee_description
      - flow
      - icon
      - name
      - pg
      - type
    PaymentResponse:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/PaymentResponseStatusEnum'
          description: |-
            The status of the payment operation.

            * `success` - Success
            * `canceled` - Canceled
        session_id:
          type: string
          description: The unique session ID for the payment operation.
        message:
          type: string
          description: The message associated with the payment operation.
        order_no:
          type: string
          description: The order number associated with the payment operation.
        operation:
          allOf:
          - $ref: '#/components/schemas/OperationEnum'
          description: |-
            The operation associated with the payment.

            * `purchase` - Purchase
            * `authorize` - Authorize
        reference_number:
          type: string
          description: The reference number associated with the payment.
        redirect_url:
          type: string
          format: uri
          description: The redirect URL is the web address where the customer should
            be sent after completing the payment stage.
      required:
      - message
      - operation
      - order_no
      - redirect_url
      - reference_number
      - session_id
      - status
    PaymentResponseStatusEnum:
      enum:
      - success
      - canceled
      type: string
      description: |-
        * `success` - Success
        * `canceled` - Canceled
    PaymentTypeEnum:
      enum:
      - e_commerce
      - payment_request
      - bulk
      - catalogue
      - customer_payment
      - shopify
      - event
      - food_ordering
      - iata
      - real_estate
      type: string
      description: |-
        * `e_commerce` - E-Commerce
        * `payment_request` - Payment request
        * `bulk` - Bulk Payment Request
        * `catalogue` - Catalogue purchase
        * `customer_payment` - Customer payment
        * `shopify` - Shopify
        * `event` - Event management and booking
        * `food_ordering` - Food ordering
        * `iata` - IATA
        * `real_estate` - Real Estate
    PermissionDenied:
      type: object
      properties:
        detail:
          type: string
          default: You do not have permission to perform this action.
    PgCodeEnum:
      enum: []
      type: boolean
    SDKPaymentMethods:
      type: object
      properties:
        code:
          type: string
          description: The slug code of the payment method.
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          description: The name of the payment method.
        pg:
          type: string
          description: The payment gateway of the payment.
        type:
          allOf:
          - $ref: '#/components/schemas/Type644Enum'
          description: |-
            The type of the payment transaction.

            * `e_commerce` - e_commerce
            * `payment_request` - payment_request
        amount:
          type: string
          description: The total amount to be charged, including fees.
        currency_code:
          type: string
          description: The currency code for the payment method represented as an
            ISO 4217 code.
          maxLength: 3
        fee:
          type: string
          description: The fee charged by the payment gateway.
        fee_description:
          type: string
          description: The description of the fee charged by the payment gateway.
        icon:
          type: string
          format: uri
          description: The URL of the icon for the payment method.
        flow:
          allOf:
          - $ref: '#/components/schemas/FlowEnum'
          description: |-
            The flow type of the payment method.

            * `card` - Card
            * `redirect` - Redirect
        can_save_card:
          type: boolean
          description: When true, display a checkbox in the SDK for card saving with
            this payment method. When false, do not display the checkbox.
        submit_url:
          type: string
          format: uri
          description: 'When submitting information via POST, the appropriate URL
            depends on the `flow` value:`card`: The URL is specifically for submitting
            PAN and related details.`redirect`: The URL is for submitting `payment_methods[index].code`.'
        cancel_url:
          type: string
          format: uri
          description: URL to be called via POST if the customer cancels the payment,
            present only when `flow` is set to `card`.
      required:
      - amount
      - can_save_card
      - cancel_url
      - code
      - currency_code
      - fee
      - fee_description
      - flow
      - icon
      - name
      - pg
      - submit_url
      - type
    SDKSubmitRedirectResponse:
      oneOf:
      - $ref: '#/components/schemas/CheckoutSubmitSuccessResponse'
      - $ref: '#/components/schemas/CheckoutSubmitFailureResponse'
    SDKSubmitTokenResponse:
      oneOf:
      - $ref: '#/components/schemas/TokenSuccessResponse'
      - $ref: '#/components/schemas/TokenCancelResponse'
      - $ref: '#/components/schemas/TokenErrorResponse'
      - $ref: '#/components/schemas/Token3DSResponse'
    ServicePaused:
      type: object
      properties:
        detail:
          type: string
          default: Service is paused.
    ShippingAddress:
      type: object
      description: Nested serializer to save Address data into PaymentTransaction
      properties:
        line1:
          type: string
          maxLength: 128
        line2:
          type: string
          maxLength: 128
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 40
        country:
          $ref: '#/components/schemas/CountryEnum'
        postal_code:
          type: string
          maxLength: 12
        first_name:
          type: string
          maxLength: 64
        last_name:
          type: string
          maxLength: 64
        email:
          type: string
          format: email
          maxLength: 128
        phone:
          type: string
          maxLength: 16
      required:
      - city
      - country
      - email
      - first_name
      - last_name
      - line1
      - phone
      - postal_code
    SmsEnum:
      enum:
      - created
      - paid
      - canceled
      - failed
      - expired
      - authorized
      - voided
      - refunded
      - captured
      type: string
      description: |-
        * `created` - Created
        * `paid` - Paid
        * `canceled` - Canceled
        * `failed` - Failed
        * `expired` - Expired
        * `authorized` - Authorized
        * `voided` - Voided
        * `refunded` - Refunded
        * `captured` - Captured
    StateD0dEnum:
      enum:
      - created
      - pending
      - attempted
      - authorized
      - paid
      - failed
      - canceled
      - expired
      - invalided
      - refunded
      - cod
      type: string
      description: |-
        * `created` - Created
        * `pending` - Pending
        * `attempted` - Attempted
        * `authorized` - Authorized
        * `paid` - Paid
        * `failed` - Failed
        * `canceled` - Canceled
        * `expired` - Expired
        * `invalided` - Invalided
        * `refunded` - Refunded
        * `cod` - Cash on Delivery
    SubmitToken:
      type: object
      description: |-
        This serializer is responsible for validating the data sent by the SDK
        when the user submits the token.
      properties:
        merchant_id:
          type: string
          description: The unique identifier of the merchant. Provided in CheckoutSDK
            init `merchant_id`.
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          description: |-
            Choose `card` for new card details or `token` for a saved customer card when processing a payment in the API request.

            * `card` - card
            * `token` - token
        session_id:
          type: string
          description: The unique identifier of the payment session. Provided in CheckoutSDK
            init `session_id`.
        token:
          type: string
          description: Use this field to provide the unique identifier of a saved
            customer card for processing a payment in the API request.
        cvv:
          type: string
          description: Input the 3 or 4-digit Card Verification Value (CVV) found
            on the back of the credit/debit card. This may be required for new card
            transactions or certain token transactions to verify the card's authenticity.
          pattern: ^\d{3,4}$
      required:
      - merchant_id
      - payment_method
      - session_id
      - token
    SuccessSessionValidation:
      type: object
      properties:
        status:
          type: string
          default: success
        merchantSession:
          type: string
          default: encrypted_merchant_session_object_here
    Token:
      type: object
      description: |-
        Serializer is being used only to serialize
        the token which is being sent to merchant
      properties:
        customer_id:
          type: string
          description: The unique identifier for the customer who owns the card
          maxLength: 36
        brand:
          type: string
          description: The card brand (e.g., Visa, Mastercard) associated with the
            card. Display this information for customer reference.
          maxLength: 32
        name_on_card:
          type: string
          description: The cardholder's name as it appears on the card. Display this
            information for customer verification.
          maxLength: 64
        number:
          type: string
          description: The masked card number to be displayed, ensuring customer privacy
            and security while providing essential information.
          maxLength: 19
        expiry_month:
          type: string
          description: The card's expiration month. Provide this information for transaction
            processing and validation.
          maxLength: 2
        expiry_year:
          type: string
          description: The card's expiration year. Provide this information for transaction
            processing and validation.
          maxLength: 2
        token:
          type: string
          description: The unique token associated with the card, required for tokenized
            card payments. Use this value to securely process transactions.
          maxLength: 19
        is_preferred:
          type: boolean
          readOnly: true
          description: ' Indicates if the card is the customer''s preferred payment
            option. Order cards with this attribute set to true at the top of the
            list for easy access.'
        is_expired:
          type: boolean
          readOnly: true
          description: Indicates whether the card has expired.
        pg_code:
          type: string
          description: The The `pg_code` associated with the card's creation.
        cvv_required:
          type: boolean
          description: Specifies if the card requires the submission of a CVV for
            transactions. A card without CVV requirement can be used for auto-debit
            or recurring payments.
      required:
      - brand
      - customer_id
      - cvv_required
      - expiry_month
      - expiry_year
      - is_expired
      - is_preferred
      - name_on_card
      - number
      - pg_code
      - token
    Token3DSResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
          default: 3DS
          description: The payment is in 3DSecure process. `html` must be displayed
            to the customer in the iframe.
        html:
          type: string
          readOnly: true
          description: The HTML code to be displayed in the iframe.
        reference_number:
          type: string
          description: This is a unique value associated with each payment attempt
            made by a customer. It serves as the unique identifier for the payment
            when sent to the Payment Gateway (PG). It can be used to identify a specific
            payment attempt within one session, allowing for multiple reference numbers
            per session_id.
        ws_url:
          type: string
          format: uri
          readOnly: true
          description: The Websocket URL to be used for 3DSecure process. A connection
            must be established with this URL and upon the 3DS process is completed,
            the backend will notify there.
      required:
      - html
      - reference_number
      - status
      - ws_url
    TokenCancelResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
          default: canceled
          description: The payment is canceled either by customer or failed due to
            various reasons. `cancelCallback` must be triggered.
        message:
          type: string
          readOnly: true
          default: Payment operation failed.
          description: The message for failed case. Can be displayed to the customer.
        session_id:
          type: string
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        order_no:
          type: string
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
        reference_number:
          type: string
          description: This is a unique value associated with each payment attempt
            made by a customer. It serves as the unique identifier for the payment
            when sent to the Payment Gateway (PG). It can be used to identify a specific
            payment attempt within one session, allowing for multiple reference numbers
            per session_id.
        redirect_url:
          type: string
          format: uri
          readOnly: true
          description: The URL where the customer will be redirected after the payment
            stage only if the webhook URL returns a success status.
      required:
      - message
      - order_no
      - redirect_url
      - reference_number
      - session_id
      - status
    TokenErrorResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
          default: error
          description: There was an error in the request. `errorCallback` must be
            triggered.
        message:
          type: string
          readOnly: true
          description: The error message. Can be displayed to the customer.
        session_id:
          type: string
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        order_no:
          type: string
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
        reference_number:
          type: string
          description: The reference number.
        redirect_url:
          type: string
          format: uri
          readOnly: true
          description: The URL where the customer will be redirected after the payment
            stage only if the webhook URL returns a success status.
      required:
      - message
      - redirect_url
      - status
    TokenSuccessResponse:
      type: object
      properties:
        status:
          type: string
          readOnly: true
          default: success
          description: The payment is successful. `successCallback` must be triggered.
        message:
          type: string
          readOnly: true
          default: Payment operation completed successfully.
          description: The success message. Can be displayed to the customer.
        session_id:
          type: string
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        order_no:
          type: string
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
        reference_number:
          type: string
          description: This is a unique value associated with each payment attempt
            made by a customer. It serves as the unique identifier for the payment
            when sent to the Payment Gateway (PG). It can be used to identify a specific
            payment attempt within one session, allowing for multiple reference numbers
            per session_id.
        redirect_url:
          type: string
          format: uri
          readOnly: true
          description: The URL where the customer will be redirected after the payment
            stage only if the webhook URL returns a success status.
      required:
      - message
      - order_no
      - redirect_url
      - reference_number
      - session_id
      - status
    Type644Enum:
      enum:
      - e_commerce
      - payment_request
      type: string
      description: |-
        * `e_commerce` - e_commerce
        * `payment_request` - payment_request
    Unit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        slug:
          type: string
      required:
      - id
      - slug
      - title
    UnsupportedMediaType:
      type: object
      properties:
        detail:
          type: string
          default: Unsupported media type "application/octet-stream" in request.
    core.payment.models.PaymentAttempt.StateChoices:
      enum:
      - pending
      - success
      - failed
      - canceled
      - error
      - cod
      type: string
      description: |-
        * `pending` - Pending
        * `success` - Success
        * `failed` - Failed
        * `canceled` - Canceled
        * `error` - Error
        * `cod` - Cash on Delivery
    core.payment.models.PaymentTransaction.StateChoices:
      enum:
      - created
      - pending
      - attempted
      - authorized
      - paid
      - failed
      - canceled
      - expired
      - invalided
      - refunded
      - cod
      - refund_queued
      - refund_rejected
      - voided
      type: string
      description: |-
        * `created` - Created
        * `pending` - Pending
        * `attempted` - Attempted
        * `authorized` - Authorized
        * `paid` - Paid
        * `failed` - Failed
        * `canceled` - Canceled
        * `expired` - Expired
        * `invalided` - Invalided
        * `refunded` - Refunded
        * `cod` - Cash on Delivery
        * `refund_queued` - Refund Queued
        * `refund_rejected` - Refund Rejected
        * `voided` - Voided
  securitySchemes:
    SSO BasicAuth:
      type: http
      scheme: basic
    SSO JWT Auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
